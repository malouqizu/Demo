#15010215903
#现在编写通用模块，这个模块的作用主要有两个
#1.对log进行处理。
#2.与串口进行通信,并对响应进行处理。
#编写程序时的好习惯就是要充分了解程序需要的运行环境
#知道运行环境之后，其实就是要对环境变量进行配置，因此
#应该编写一个模块专门用来对环境进行配置。
#经过上面的一系列分析，就可以大致定义该模块要实现的类
#AtConfig() 环境变量配置类
#这里的环境变量配置比较简单
#AT_TEST_LOG_FILE
#COMPORT
#AtLogger() log管理类
#1.将log输出到一个TXT文件
#2.将log输出到标准输出stdout，控制台
#这里采用的方法是如果log文件名不存在，那么就将log输出到控制台，否则将其输出到log文件
#def __init__(self):
#def __write(slef):
#其实，实现上面两个函数之后，那么重要的功能就实现完了，对于一个没有经验的编程者来讲就可以使用了
#但是，想把程序写的更好，逻辑性更加的清晰，那么是根据log输出时的不同内容对__write(self):进行封装
#来实现针对不同的内容输出，调用不同的log打印函数，
#log的打印可以以每个case的执行为单位进行划分
#因为现在并没有非常清楚log的输出模式
#因此，现在只实现一个log输出函数def log_out(self,logstr):
#AtChat() 串口通信类
#这个类包含的内容比较多
#def __init__(self):
#def com_open(self):
#def com_close(self):
#def com_reopen(self):
#def send_command(self,command):
#def read_response(self):
#def check_response(self):
