# 可变数量参数传递练习
# 练习1：带一个可变数量参数
# 定义函数，一个可变数量参数
'''
def fun1(*p):
    print(type(p))
    print(p)

#调用函数，不提供参数
fun1()

#调用函数，提供5个同类型参数
fun1(1,2,3,4,5)

#调用函数，提供3个不同类型参数
fun1("张三",20.34,5000)
'''
'''
#练习2：既包含普通参数，又包含可变数量参数
#函数定义
def fun2(num,name,*p2):
    print(num,name)
    print(p2)

#调用函数，至少要提供普通参数
fun2(1,"张三")

#调用函数，提供可变数量参数3个值
fun2(2,"李四","北京",20,"13530989098")

#调用函数，提供可变数量参数5个值
fun2(3,"小明","北京",20,"67.56KG","1.85M","汉族")
'''
# 练习3：可变数量参数放在参数列表最前面，但函数调用时，
# 普通参数需要以关键字参数形式提供
'''
def fun3(*p3,num,name):
    print(num,name)
    print(p3)
#函数调用，只提供普通参数
fun3(num=10,name="张三")

fun3("北京",20,"18756789098",name="李四",num=200)
'''


# 练习4：声明一个函数，包含三种类型的参数（普通，默认值、可变）
# 函数定义
def fun4(*p, num=100, name):
    print(num, name)
    print(p)


# 函数调用，为普通参数均提供值，可变长p不提供值
fun4(name="张三", num=300)

# 函数调用，使用默认值参数
fun4(name="李四")

# 函数调用，全部提供参数
fun4("北京", 20, "18790987676", name="小明", num=200)

# 函数调用，省略默认值参数
fun4("北京", 20, "18790987676", "185CM", "80KG", name="小明")

